from __future__ import annotations

import os
from dataclasses import dataclass, field
from typing import List, Optional


def _get_bool(name: str, default: bool = False) -> bool:
    v = os.getenv(name)
    if v is None:
        return default
    return v.strip().lower() in {"1", "true", "yes", "y", "on"}


def _get_int(name: str, default: int) -> int:
    try:
        return int(os.getenv(name, str(default)))
    except Exception:
        return default


@dataclass
class Config:
    # üîê –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ). –ú–µ–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è: TELEGRAM_TOKEN
    TELEGRAM_TOKEN: str = os.getenv("TELEGRAM_TOKEN", "")

    # üîë –ö–ª—é—á TMDb API. –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: TMDB_KEY
    TMDB_KEY: str = os.getenv("TMDB_KEY", "")

    # üåê –ü–æ—Ä—è–¥–æ–∫ —è–∑—ã–∫–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–ø–µ—Ä–≤—ã–π ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π). –ú–µ–Ω—è–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    LANG_FALLBACKS: List[str] = field(default_factory=lambda: ["ru", "en"])

    # ‚úâÔ∏è –¢—Ä–µ–±–æ–≤–∞—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –ø–µ—Ä–µ–¥ –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ —á–∞—Ç–∞—Ö (true/false). ENV: REQUIRE_PREFIX
    REQUIRE_PREFIX: bool = _get_bool("REQUIRE_PREFIX", False)

    # üßæ –§–æ—Ä–º–∞—Ç –ª–æ–≥–æ–≤: "text" –∏–ª–∏ "json". ENV: LOG_FORMAT
    LOG_FORMAT: str = os.getenv("LOG_FORMAT", "text")

    # üì¶ –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª–Ω—ã–π –∞—Ä—Ö–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MEGA). ENV: MEGA_URL; –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å
    MEGA_URL: Optional[str] = os.getenv("MEGA_URL") or None

    # üïí –í—Ä–µ–º—è –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π /list (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö). ENV: LIST_TTL_SECONDS; –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 300 (5 –º–∏–Ω—É—Ç)
    LIST_TTL_SECONDS: int = _get_int("LIST_TTL_SECONDS", 300)


config = Config()

