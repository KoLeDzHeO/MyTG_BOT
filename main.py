import logging
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from src.config import TELEGRAM_TOKEN, ALLOWED_CHAT_IDS
from src.handlers import make_handlers

logging.basicConfig(level=logging.INFO)


def allowed(chat_id: int) -> bool:
    return not ALLOWED_CHAT_IDS or chat_id in ALLOWED_CHAT_IDS

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not allowed(update.effective_chat.id): return
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –±–æ—Ç. –ù–∞–ø–∏—à–∏ /help")

async def show_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not allowed(update.effective_chat.id): return
    await update.message.reply_text(f"Chat ID: {update.effective_chat.id}")

async def coin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not allowed(update.effective_chat.id): return
    await update.message.reply_text(f"ü™ô {random.choice(['–æ—Ä—ë–ª', '—Ä–µ—à–∫–∞'])}")

async def eightball(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not allowed(update.effective_chat.id): return
    answers = [
        "–î–∞", "–ù–µ—Ç", "–°–∫–æ—Ä–µ–µ –¥–∞", "–°–∫–æ—Ä–µ–µ –Ω–µ—Ç",
        "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–®–∞–Ω—Å—ã –º–∞–ª—ã", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–¢—É–º–∞–Ω–Ω–æ, –Ω–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–µ—Ç"
    ]
    await update.message.reply_text(f"üîÆ {random.choice(answers)}")

async def fake_ban(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not allowed(update.effective_chat.id): return
    if update.message.reply_to_message:
        name = update.message.reply_to_message.from_user.first_name or "–≠—Ç–æ—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω"
    elif context.args:
        name = " ".join(context.args)
    else:
        name = "–ù–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç"
    await update.message.reply_text(f"üö´ {name} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω(–∞) –≤ –æ–±—ä—è—Ç–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏... —à—É—Ç–∫–∞ üòâ")

def build_app():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("id", show_id))
    app.add_handler(CommandHandler("coin", coin))
    app.add_handler(CommandHandler("8ball", eightball))
    app.add_handler(CommandHandler("ban", fake_ban))
    for h in make_handlers():
        app.add_handler(h)
    return app


if __name__ == "__main__":
    app = build_app()
    app.run_polling(drop_pending_updates=True)
